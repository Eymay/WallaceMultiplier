$date
	Mon Mar 27 12:02:31 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module PPG_tb $end
$var reg 16 ! X [15:0] $end
$var reg 16 " Y [15:0] $end
$var reg 32 # inputs [31:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % idx [31:0] $end
$scope module PPG_inst $end
$var wire 16 & X [15:0] $end
$var wire 16 ' Y [15:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ( i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 ) i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 * i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 + i $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 , i $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 - i $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 . i $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 / i $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 0 i $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 1 i $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 2 i $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 3 i $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 4 i $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 5 i $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 6 i $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 7 i $end
$upscope $end
$upscope $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 8 \PP[0] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 9 \PP[1] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 : \PP[2] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 ; \PP[3] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 < \PP[4] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 = \PP[5] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 > \PP[6] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 ? \PP[7] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 @ \PP[8] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 A \PP[9] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 B \PP[10] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 C \PP[11] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 D \PP[12] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 E \PP[13] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 F \PP[14] [31:0] $end
$upscope $end
$scope module PPG_tb $end
$var reg 32 G \PP[15] [31:0] $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1111 7
b1110 6
b1101 5
b1100 4
b1011 3
b1010 2
b1001 1
b1000 0
b111 /
b110 .
b101 -
b100 ,
b11 +
b10 *
b1 )
b0 (
$end
#0
$dumpvars
b0 G
b100110010100000000000000 F
b0 E
b0 D
b0 C
b0 B
b0 A
b100110010100000000 @
b0 ?
b0 >
b0 =
b0 <
b1001100101000 ;
b0 :
b10011001010 9
b0 8
b100000100001010 '
b1001100101 &
b10000 %
b0 $
b10011001010100000100001010 #
b100000100001010 "
b1001100101 !
$end
#10
b1001100101 8
b100000100001011 "
b100000100001011 '
b10011001010100000100001011 #
b1 $
#20
b0 9
b100110010100 :
b0 8
b100000100001100 "
b100000100001100 '
b10011001010100000100001100 #
b10 $
#30
b1001100101 8
b100000100001101 "
b100000100001101 '
b10011001010100000100001101 #
b11 $
#40
b10011001010 9
b0 8
b100000100001110 "
b100000100001110 '
b10011001010100000100001110 #
b100 $
#50
b1001100101 8
b100000100001111 "
b100000100001111 '
b10011001010100000100001111 #
b101 $
#60
b0 9
b0 :
b0 ;
b10011001010000 <
b0 8
b100000100010000 "
b100000100010000 '
b10011001010100000100010000 #
b110 $
#70
b1001100101 8
b100000100010001 "
b100000100010001 '
b10011001010100000100010001 #
b111 $
#80
b10011001010 9
b0 8
b100000100010010 "
b100000100010010 '
b10011001010100000100010010 #
b1000 $
#90
b1001100101 8
b100000100010011 "
b100000100010011 '
b10011001010100000100010011 #
b1001 $
#100
b1110 9
b0 <
b0 @
b0 F
b111 8
b11 "
b11 '
b111 !
b111 &
b1010 $
#110
b11111111111111110 9
b1111111111111111 8
b1111111111111111 !
b1111111111111111 &
#120
b111100000000111100 :
b1111000000001111000 ;
b11110000000011110000 <
b111100000000111100000 =
b1111000000001111000000 >
b11110000000011110000000 ?
b111100000000111100000000 @
b1111000000001111000000000 A
b11110000000011110000000000 B
b111100000000111100000000000 C
b1111000000001111000000000000 D
b11110000000011110000000000000 E
b111100000000111100000000000000 F
b1111000000001111000000000000000 G
b11110000000011110 9
b1111000000001111 8
b1111111111111111 "
b1111111111111111 '
b1111000000001111 !
b1111000000001111 &
#130
